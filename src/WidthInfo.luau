export type WidthInfo = number

-- impl WidthInfo {

-- No special handling necessary

local DEFAULT: WidthInfo = 0
local LINE_FEED: WidthInfo = 0b0000000000000001
local EMOJI_MODIFIER: WidthInfo = 0b0000000000000010
local REGIONAL_INDICATOR: WidthInfo = 0b0000000000000011
local SEVERAL_REGIONAL_INDICATOR: WidthInfo = 0b0000000000000100
local EMOJI_PRESENTATION: WidthInfo = 0b0000000000000101
local ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0001000000000110
local VS16_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b1001000000000110
local KEYCAP_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0001000000000111
local VS16_KEYCAP_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b1001000000000111
local REGIONAL_INDICATOR_ZWJ_PRESENTATION: WidthInfo = 0b0000000000001001
local EVEN_REGIONAL_INDICATOR_ZWJ_PRESENTATION: WidthInfo = 0b0000000000001010
local ODD_REGIONAL_INDICATOR_ZWJ_PRESENTATION: WidthInfo = 0b0000000000001011
local TAG_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000010000
local TAG_D1_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000010001
local TAG_D2_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000010010
local TAG_D3_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000010011
local TAG_A1_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000011001
local TAG_A2_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000011010
local TAG_A3_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000011011
local TAG_A4_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000011100
local TAG_A5_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000011101
local TAG_A6_END_ZWJ_EMOJI_PRESENTATION: WidthInfo = 0b0000000000011110
local VARIATION_SELECTOR_15: WidthInfo = 0b0100000000000000
local VARIATION_SELECTOR_16: WidthInfo = 0b1000000000000000
local JOINING_GROUP_ALEF: WidthInfo = 0b0011000011111111
local COMBINING_LONG_SOLIDUS_OVERLAY = if _G.UNICODE_WIDTH_CJK ~= false
    then 0b0011110011111111
    else nil
local SOLIDUS_OVERLAY_ALEF = if _G.UNICODE_WIDTH_CJK ~= false then 0b0011100011111111 else nil
local HEBREW_LETTER_LAMED: WidthInfo = 0b0011100000000000
local ZWJ_HEBREW_LETTER_LAMED: WidthInfo = 0b0011110000000000
local BUGINESE_LETTER_YA: WidthInfo = 0b0011100000000001
local ZWJ_BUGINESE_LETTER_YA: WidthInfo = 0b0011110000000001
local BUGINESE_VOWEL_SIGN_I_ZWJ_LETTER_YA: WidthInfo = 0b0011110000000010
local TIFINAGH_CONSONANT: WidthInfo = 0b0011100000000011
local ZWJ_TIFINAGH_CONSONANT: WidthInfo = 0b0011110000000011
local TIFINAGH_JOINER_CONSONANT: WidthInfo = 0b0011110000000100
local LISU_TONE_LETTER_MYA_NA_JEU: WidthInfo = 0b0011110000000101
local OLD_TURKIC_LETTER_ORKHON_I: WidthInfo = 0b0011100000000110
local ZWJ_OLD_TURKIC_LETTER_ORKHON_I: WidthInfo = 0b0011110000000110
local KHMER_COENG_ELIGIBLE_LETTER: WidthInfo = 0b0011110000000111

-- Whether this width mode is ligature_transparent
-- (has 5th MSB set.)
local function isLigatureTransparent(self: WidthInfo): boolean
    return bit32.band(self, 0b0000_1000_0000_0000) == 0b0000_1000_0000_0000
end

-- Sets 6th MSB.
local function setZwjBit(self: WidthInfo): WidthInfo
    return bit32.bor(self, 0b0000_0100_0000_0000)
end

-- Has top bit set
local function isEmojiPresentation(self: WidthInfo): boolean
    return bit32.band(self, 0b1000_0000_0000_0000) == 0b1000_0000_0000_0000
end

-- Has top bit set
local function isZwjEmojiPresentation(self: WidthInfo): boolean
    return bit32.band(self, 0b1011_0000_0000_0000) == 0b1001_0000_0000_0000
end

-- Set top bit
local function setEmojiPresentation(self: WidthInfo): WidthInfo
    if
        bit32.band(self, 0b0010_0000_0000_0000) == 0b0010_0000_0000_0000
        or bit32.band(self, 0b1001_0000_0000_0000) == 0b0001_0000_0000_0000
    then
        return bit32.bor(self, 0b1000_0000_0000_0000)
    else
        return VARIATION_SELECTOR_16
    end
end

-- Clear top bit
local function unsetEmojiPresentation(self: WidthInfo): WidthInfo
    if bit32.band(self, 0b0010_0000_0000_0000) == 0b0010_0000_0000_0000 then
        return bit32.band(self, 0b0111_1111_1111_1111)
    else
        return DEFAULT
    end
end

-- Has 2nd bit set
local function isTextPresentation(self: WidthInfo): boolean
    return bit32.band(self, 0b0100_0000_0000_0000) == 0b0100_0000_0000_0000
end

-- Set 2nd bit
local function setTextPresentation(self: WidthInfo): WidthInfo
    if bit32.band(self, 0b0010_0000_0000_0000) == 0b0010_0000_0000_0000 then
        return bit32.bor(self, 0b0100_0000_0000_0000)
    else
        return 0b0100_0000_0000_0000
    end
end

-- Clear 2nd bit
local function unsetTextPresentation(self: WidthInfo): WidthInfo
    return bit32.band(self, 0b1011_1111_1111_1111)
end

return {
    DEFAULT = DEFAULT,
    LINE_FEED = LINE_FEED,
    EMOJI_MODIFIER = EMOJI_MODIFIER,
    REGIONAL_INDICATOR = REGIONAL_INDICATOR,
    SEVERAL_REGIONAL_INDICATOR = SEVERAL_REGIONAL_INDICATOR,
    EMOJI_PRESENTATION = EMOJI_PRESENTATION,
    ZWJ_EMOJI_PRESENTATION = ZWJ_EMOJI_PRESENTATION,
    VS16_ZWJ_EMOJI_PRESENTATION = VS16_ZWJ_EMOJI_PRESENTATION,
    KEYCAP_ZWJ_EMOJI_PRESENTATION = KEYCAP_ZWJ_EMOJI_PRESENTATION,
    VS16_KEYCAP_ZWJ_EMOJI_PRESENTATION = VS16_KEYCAP_ZWJ_EMOJI_PRESENTATION,
    REGIONAL_INDICATOR_ZWJ_PRESENTATION = REGIONAL_INDICATOR_ZWJ_PRESENTATION,
    EVEN_REGIONAL_INDICATOR_ZWJ_PRESENTATION = EVEN_REGIONAL_INDICATOR_ZWJ_PRESENTATION,
    ODD_REGIONAL_INDICATOR_ZWJ_PRESENTATION = ODD_REGIONAL_INDICATOR_ZWJ_PRESENTATION,
    TAG_END_ZWJ_EMOJI_PRESENTATION = TAG_END_ZWJ_EMOJI_PRESENTATION,
    TAG_D1_END_ZWJ_EMOJI_PRESENTATION = TAG_D1_END_ZWJ_EMOJI_PRESENTATION,
    TAG_D2_END_ZWJ_EMOJI_PRESENTATION = TAG_D2_END_ZWJ_EMOJI_PRESENTATION,
    TAG_D3_END_ZWJ_EMOJI_PRESENTATION = TAG_D3_END_ZWJ_EMOJI_PRESENTATION,
    TAG_A1_END_ZWJ_EMOJI_PRESENTATION = TAG_A1_END_ZWJ_EMOJI_PRESENTATION,
    TAG_A2_END_ZWJ_EMOJI_PRESENTATION = TAG_A2_END_ZWJ_EMOJI_PRESENTATION,
    TAG_A3_END_ZWJ_EMOJI_PRESENTATION = TAG_A3_END_ZWJ_EMOJI_PRESENTATION,
    TAG_A4_END_ZWJ_EMOJI_PRESENTATION = TAG_A4_END_ZWJ_EMOJI_PRESENTATION,
    TAG_A5_END_ZWJ_EMOJI_PRESENTATION = TAG_A5_END_ZWJ_EMOJI_PRESENTATION,
    TAG_A6_END_ZWJ_EMOJI_PRESENTATION = TAG_A6_END_ZWJ_EMOJI_PRESENTATION,
    VARIATION_SELECTOR_15 = VARIATION_SELECTOR_15,
    VARIATION_SELECTOR_16 = VARIATION_SELECTOR_16,
    JOINING_GROUP_ALEF = JOINING_GROUP_ALEF,
    COMBINING_LONG_SOLIDUS_OVERLAY = COMBINING_LONG_SOLIDUS_OVERLAY,
    SOLIDUS_OVERLAY_ALEF = SOLIDUS_OVERLAY_ALEF,
    HEBREW_LETTER_LAMED = HEBREW_LETTER_LAMED,
    ZWJ_HEBREW_LETTER_LAMED = ZWJ_HEBREW_LETTER_LAMED,
    BUGINESE_LETTER_YA = BUGINESE_LETTER_YA,
    ZWJ_BUGINESE_LETTER_YA = ZWJ_BUGINESE_LETTER_YA,
    BUGINESE_VOWEL_SIGN_I_ZWJ_LETTER_YA = BUGINESE_VOWEL_SIGN_I_ZWJ_LETTER_YA,
    TIFINAGH_CONSONANT = TIFINAGH_CONSONANT,
    ZWJ_TIFINAGH_CONSONANT = ZWJ_TIFINAGH_CONSONANT,
    TIFINAGH_JOINER_CONSONANT = TIFINAGH_JOINER_CONSONANT,
    LISU_TONE_LETTER_MYA_NA_JEU = LISU_TONE_LETTER_MYA_NA_JEU,
    OLD_TURKIC_LETTER_ORKHON_I = OLD_TURKIC_LETTER_ORKHON_I,
    ZWJ_OLD_TURKIC_LETTER_ORKHON_I = ZWJ_OLD_TURKIC_LETTER_ORKHON_I,
    KHMER_COENG_ELIGIBLE_LETTER = KHMER_COENG_ELIGIBLE_LETTER,

    isLigatureTransparent = isLigatureTransparent,
    isEmojiPresentation = isEmojiPresentation,
    isZwjEmojiPresentation = isZwjEmojiPresentation,
    setEmojiPresentation = setEmojiPresentation,
    unsetEmojiPresentation = unsetEmojiPresentation,
    isTextPresentation = isTextPresentation,
    setTextPresentation = setTextPresentation,
    unsetTextPresentation = unsetTextPresentation,
    setZwjBit = setZwjBit,
}
